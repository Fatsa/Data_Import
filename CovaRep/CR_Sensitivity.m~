% calculate the sensitivity of features
% FileName only contains the name of the file
% PathName only have the absolute path of the file

% - features - 
% F0 - 1
% VUV - 2
% NAQ - 3
% QOQ - 4 
% H1H2 - 5
% PSP - 6
% MDQ - 7
% peakSlope - 8 
% Rd - 9

function [CR_Sensitivity]=FT_Sensitivity (fileName, pathName)
    F0_Sensitivity = zeros(1,1);
    VUV_Sensitivity = zeros(1,1);
    NAQ_Sensitivity = zeros(1,1);
    QOQ_Sensitivity = zeros(1,1);
    H1H2_Sensitivity = zeros(1,1);
    PSP_Sensitivity = zeros(1,1);
    MDQ_Sensitivity = zeros(1,1);
    peakSlope_Sensitivity = zeros(1,1);
    Rd_Sensitivity = zeros(1,1);
    
    % collect all the data according to each feature
    for n = 1: length(fileName)
        fprintf('%s start to process file\n',fileName{n})
        [temp_Matrix, count]=CR_Sensitivity_Collection(fileName{n}, pathName);
        
        [F0_Sensitivity, VUV_Sensitivity, NAQ_Sensitivity, QOQ_Sensitivity, ...
        H1H2_Sensitivity, PSP_Sensitivity, MDQ_Sensitivity, ...
        peakSlope_Sensitivity, Rd_Sensitivity] ... 
        = CR_Sensitivity_Merge ...
        (F0_Sensitivity, VUV_Sensitivity, NAQ_Sensitivity, QOQ_Sensitivity, ...
        H1H2_Sensitivity, PSP_Sensitivity, MDQ_Sensitivity, ...
        peakSlope_Sensitivity, Rd_Sensitivity,temp_Matrix, count); 
    end
    % calculate the sensivitiy detalied value
    % sensitivity contains average value, SD, SD of SD from above features
    CR_Sensitivity = CR_Sensitivity_Calculation ... 
        (F0_Sensitivity, VUV_Sensitivity, NAQ_Sensitivity, QOQ_Sensitivity, ...
        H1H2_Sensitivity, PSP_Sensitivity, MDQ_Sensitivity, ...
        peakSlope_Sensitivity, Rd_Sensitivity);
    
    csvwrite(export_FileName, CR_Sensitivity);
end

% collect the data 
% FileName only contains the name of the file
% PathName only have the absolute path of the file
% 
function [temp_Matrix, count]=CR_Sensitivity_Collection(fileName, pathName)
    % count represent the count index of the line
    count=1;
    % define the temp matrix
    temp_Matrix=zeros(50000,9);
    
    % combine the file path and the file name
    path = fullfile(pathName,fileName);
    % open the file and store the data in IOStream
    % message is used to label the error
    % path including the file name and its path
    [ioStream,message] = fopen(path,'r');
    % select the type of the file and judge whether IOStream is empty or not
    % different type will be processed differently 
    
    if (0 ~= message) 
        fprintf(message);
        exit(EXIT_FAILURE);
    else 
        % check whehter the iosStream reach the end of the file stream
        while ~feof(ioStream)
            %read each line
            titleLine = fgetl(ioStream);
            b = strsplit(titleLine,' ');
            % time value is not needed
            %temp_matrix(count,1)=str2double(b{1});
            if 50000 == count
                fprintf ('Boom! \n');
            else
                
                temp_Matrix(count,1)=str2double(b{2});
            end
            count=count+1;
        end
    end
    % close the file stream
    fclose(ioStream);
end

% merage differnt file data into one matrix
function [target_Sensitivity] = FT_Sensitivity_Merge (target_Sensitivity, temp_Matrix,count)
    [M,N] = size(target_Sensitivity);
    temp = zeros (count, 1);
    for i=1:count 
        temp(i,1) = temp_Matrix(i,1);
    end
    if (1 == M)
        target_Sensitivity = temp;
    else
        target_Sensitivity = [target_Sensitivity;temp];
    end
end

% calculate the sensitivity
function [FT_sensitivity] = FT_Sensitivity_Calculation (F0_Sensitivity, ... 
        VUV_Sensitivity, NAQ_Sensitivity, QOQ_Sensitivity, ...
        H1H2_Sensitivity, PSP_Sensitivity, MDQ_Sensitivity, ...
        peakSlope_Sensitivity, Rd_Sensitivity, disgust_Sensitivity, ...
        contempt_Sensitivity, amusement_Sensitivity)
    % define the sensitivity matrix
    FT_sensitivity = zeros(12,3);
    
    % arousal
    FT_sensitivity(1,1) = FT_Sensitivity_AV (F0_Sensitivity);
    FT_sensitivity(1,2) = FT_Sensitivity_SD (FT_sensitivity(1,1),F0_Sensitivity);
    FT_sensitivity(1,3) = FT_Sensitivity_SK (FT_sensitivity(1,1),F0_Sensitivity);
    % valence
    FT_sensitivity(2,1) = FT_Sensitivity_AV (VUV_Sensitivity);
    FT_sensitivity(2,2) = FT_Sensitivity_SD (FT_sensitivity(2,1),VUV_Sensitivity); 
    FT_sensitivity(2,3) = FT_Sensitivity_SK (FT_sensitivity(2,1),VUV_Sensitivity);
    % power
    FT_sensitivity(3,1) = FT_Sensitivity_AV (NAQ_Sensitivity);
    FT_sensitivity(3,2) = FT_Sensitivity_SD (FT_sensitivity(3,1),NAQ_Sensitivity);    
    FT_sensitivity(3,3) = FT_Sensitivity_SK (FT_sensitivity(3,1),NAQ_Sensitivity);  
    % expectation
    FT_sensitivity(4,1) = FT_Sensitivity_AV (QOQ_Sensitivity);
    FT_sensitivity(4,2) = FT_Sensitivity_SD (FT_sensitivity(4,1),QOQ_Sensitivity);    
    FT_sensitivity(4,3) = FT_Sensitivity_SK (FT_sensitivity(4,1),QOQ_Sensitivity);      
    % intensity
    FT_sensitivity(5,1) = FT_Sensitivity_AV (H1H2_Sensitivity);
    FT_sensitivity(5,2) = FT_Sensitivity_SD (FT_sensitivity(5,1),H1H2_Sensitivity);    
    FT_sensitivity(5,3) = FT_Sensitivity_SK (FT_sensitivity(5,1),H1H2_Sensitivity);    
    % fear
    FT_sensitivity(6,1) = FT_Sensitivity_AV (PSP_Sensitivity);
    FT_sensitivity(6,2) = FT_Sensitivity_SD (FT_sensitivity(6,1),PSP_Sensitivity);     
    FT_sensitivity(6,3) = FT_Sensitivity_SK (FT_sensitivity(6,1),PSP_Sensitivity);   
    % anger
    FT_sensitivity(7,1) = FT_Sensitivity_AV (MDQ_Sensitivity);
    FT_sensitivity(7,2) = FT_Sensitivity_SD (FT_sensitivity(7,1),MDQ_Sensitivity);      
    FT_sensitivity(7,3) = FT_Sensitivity_SK (FT_sensitivity(7,1),MDQ_Sensitivity);   
    % happiness
    FT_sensitivity(8,1) = FT_Sensitivity_AV (peakSlope_Sensitivity);
    FT_sensitivity(8,2) = FT_Sensitivity_SD (FT_sensitivity(8,1),peakSlope_Sensitivity);       
    FT_sensitivity(8,3) = FT_Sensitivity_SK (FT_sensitivity(8,1),peakSlope_Sensitivity);  
    % saddness
    FT_sensitivity(9,1) = FT_Sensitivity_AV (Rd_Sensitivity);
    FT_sensitivity(9,2) = FT_Sensitivity_SD (FT_sensitivity(9,1),Rd_Sensitivity);  
    FT_sensitivity(9,3) = FT_Sensitivity_SK (FT_sensitivity(9,1),Rd_Sensitivity);    
   % disgust
    FT_sensitivity(10,1) = FT_Sensitivity_AV (disgust_Sensitivity);
    FT_sensitivity(10,2) = FT_Sensitivity_SD (FT_sensitivity(10,1),disgust_Sensitivity);  
    FT_sensitivity(10,3) = FT_Sensitivity_SK (FT_sensitivity(10,1),disgust_Sensitivity);  
   % contempt
    FT_sensitivity(11,1) = FT_Sensitivity_AV (contempt_Sensitivity);
    FT_sensitivity(11,2) = FT_Sensitivity_SD (FT_sensitivity(11,1),contempt_Sensitivity);   
    FT_sensitivity(11,3) = FT_Sensitivity_SK (FT_sensitivity(11,1),contempt_Sensitivity); 
   % amusement
    FT_sensitivity(12,1) = FT_Sensitivity_AV (amusement_Sensitivity);
    FT_sensitivity(12,2) = FT_Sensitivity_SD (FT_sensitivity(12,1),amusement_Sensitivity);   
    FT_sensitivity(12,3) = FT_Sensitivity_SK (FT_sensitivity(12,1),amusement_Sensitivity);  
end

% calculate the average value
function [AV] = FT_Sensitivity_AV(target_List)
    [M,N] = size(target_List);
    sum= double(0);
    for i = 1 :M
        sum = sum + target_List(i,1);
    end
    AV = sum/M;
end

% calculate the SD, average value
function [SD] = FT_Sensitivity_SD(AV, target_List)
    [M,N] = size(target_List);
    sum = 0;
    for i = 1 :M
        sum = sum + (AV-target_List(i,1))^2;
    end    
    SD = sqrt(sum/M);
end

% calculate the Skewness, average value
function [SK] = FT_Sensitivity_SK(AV, target_List)
    [M,N] = size(target_List);
    sum1 = 0;
    sum2 = 0;
    for i = 1 :M
        sum1 = sum1 + (AV-target_List(i,1))^3;
        sum2 = sum2 + (AV-target_List(i,1))^2;
    end    
    SK = (sum1/M)/((sqrt(sum2/(M-1)))^3);
end
